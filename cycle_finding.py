# Explanation: I have used DFS algorithm here. Only when we are at GRAY vertex and again reached to a
# GRAY vertex I returned a boolean value and printed YES. If I dont find any GRAY to GRAY edge the value initializes with False and printed NO

# -*- coding: utf-8 -*-
"""task4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WMWmAY20YFZgTGELLtb5s0F0wimaoy7m
"""

inp = open('/content/input4.txt',"r")
out = open('/content/output4.txt',"w")

x,y = list(map(int,inp.readline().split()))
adjL = [[] for i in range(x+1)] #creating adj list

for i in range(y):
  a,b = list(map(int,inp.readline().split()))
  adjL[a].append(b) #inputing all nodes into adj list

def DFS(G,s):
  col = ["w"] * (x+1)

  def DFS_visit(G,curr):
    col[curr] = "g"
    for v in G[curr]:
      if col[v] == "w":
        DFS_visit(G,v)
      if col[v] == "g":
        return True
    col[curr] = "b"

  for i in range(1,x+1):
    if col[i] == "w":
      return DFS_visit(G,i)
if DFS(adjL,1):
  out.write("YES")
else:
  out.write("NO")

